#!/usr/bin/env bash

install_sbcl() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d)
  else
    local tmp_download_dir=$TMPDIR
  fi

  local source_path=$(get_download_file_path $version $tmp_download_dir)
  download_compiler $tmp_download_dir/compile_version
  download $version $source_path

  # running this in a subshell
  # because we don't want to disturb the current working dir
  (
    echo ""
    echo "Installing Temporary Compiling Version of Steel Bank Common Lisp"
    echo ""
    cd $tmp_download_dir
    mkdir -p $tmp_download_dir/compile_version_installer
    mkdir -p $tmp_download_dir/compile_version
    tar -xvf $tmp_download_dir/compile_version.tar.bz2 -C compile_version_installer --strip-components 1 || exit 1
    cd $tmp_download_dir/compile_version_installer
    INSTALL_ROOT=$tmp_download_dir/compile_version sh install.sh
  )

  # running this in a subshell
  # because we don't want to disturb current working dir
  (
    echo ""
    echo "Installing Steel Bank Common Lisp v${version}"
    echo ""
    cd $(dirname $source_path)
    tar -xvf $source_path || exit 1
    cd $(untar_path $version $tmp_download_dir)

    # we unset it here because echo-ing changes the return value of the function
    unset ASDF_PKG_MISSING

    PATH=$PATH:$tmp_download_dir/compile_version/bin INSTALL_ROOT=$install_path SBCL_HOME=$tmp_download_dir/compile_version/lib/sbcl sh make.sh && INSTALL_ROOT=$install_path SBCL_HOME=$install_path/lib/sbcl sh install.sh
  )
}


untar_path() {
  local version=$1
  local tmp_download_dir=$2

  echo "$tmp_download_dir/sbcl-${version}"
}


download() {
  local version=$1
  local download_path=$2
  local download_url=$(get_download_url $version)

  curl -Lo $download_path -C - $download_url
}

download_compiler() {
  local download_path=$1
  local os="linux"
  local operating_system=$(uname -a)

  if [[ "$operating_system" =~ "Darwin" ]]; then
    os="darwin"
  fi

  curl -Lo $download_path.tar.bz2 -C - "https://sourceforge.net/projects/sbcl/files/sbcl/1.1.6/sbcl-1.1.6-x86-64-${os}-binary.tar.bz2/download"
}


get_download_file_path() {
  local version=$1
  local tmp_download_dir=$2
  local pkg_name="sbcl-${version}.tar.bz2"

  echo "$tmp_download_dir/$pkg_name"
}


get_download_url() {
  local version=$1

  echo "https://sourceforge.net/projects/sbcl/files/sbcl/${version}/sbcl-${version}-source.tar.bz2/download"
}


install_sbcl $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
